// Generated by Dagger (https://dagger.dev).
package com.rana.bitapp.domain.use_case.getTickers;

import com.rana.bitapp.domain.repository.TicketRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetTickersUseCase_Factory implements Factory<GetTickersUseCase> {
  private final Provider<TicketRepository> repositoryProvider;

  public GetTickersUseCase_Factory(Provider<TicketRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetTickersUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetTickersUseCase_Factory create(Provider<TicketRepository> repositoryProvider) {
    return new GetTickersUseCase_Factory(repositoryProvider);
  }

  public static GetTickersUseCase newInstance(TicketRepository repository) {
    return new GetTickersUseCase(repository);
  }
}
