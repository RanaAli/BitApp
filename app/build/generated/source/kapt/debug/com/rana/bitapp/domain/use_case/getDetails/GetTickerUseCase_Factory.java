// Generated by Dagger (https://dagger.dev).
package com.rana.bitapp.domain.use_case.getDetails;

import com.rana.bitapp.domain.repository.BitfinexRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetTickerUseCase_Factory implements Factory<GetTickerUseCase> {
  private final Provider<BitfinexRepository> bitfinexRepositoryProvider;

  public GetTickerUseCase_Factory(Provider<BitfinexRepository> bitfinexRepositoryProvider) {
    this.bitfinexRepositoryProvider = bitfinexRepositoryProvider;
  }

  @Override
  public GetTickerUseCase get() {
    return newInstance(bitfinexRepositoryProvider.get());
  }

  public static GetTickerUseCase_Factory create(
      Provider<BitfinexRepository> bitfinexRepositoryProvider) {
    return new GetTickerUseCase_Factory(bitfinexRepositoryProvider);
  }

  public static GetTickerUseCase newInstance(BitfinexRepository bitfinexRepository) {
    return new GetTickerUseCase(bitfinexRepository);
  }
}
