// Generated by Dagger (https://dagger.dev).
package com.rana.bitapp.di;

import com.rana.bitapp.data.remote.websockets.BitfinexWebSocketApi;
import com.tinder.scarlet.Scarlet;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideScarletServiceFactory implements Factory<BitfinexWebSocketApi> {
  private final Provider<Scarlet> scarletProvider;

  public AppModule_ProvideScarletServiceFactory(Provider<Scarlet> scarletProvider) {
    this.scarletProvider = scarletProvider;
  }

  @Override
  public BitfinexWebSocketApi get() {
    return provideScarletService(scarletProvider.get());
  }

  public static AppModule_ProvideScarletServiceFactory create(Provider<Scarlet> scarletProvider) {
    return new AppModule_ProvideScarletServiceFactory(scarletProvider);
  }

  public static BitfinexWebSocketApi provideScarletService(Scarlet scarlet) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideScarletService(scarlet));
  }
}
