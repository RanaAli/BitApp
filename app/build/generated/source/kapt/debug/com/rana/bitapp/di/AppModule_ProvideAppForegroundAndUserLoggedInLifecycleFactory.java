// Generated by Dagger (https://dagger.dev).
package com.rana.bitapp.di;

import android.app.Application;
import com.tinder.scarlet.Lifecycle;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideAppForegroundAndUserLoggedInLifecycleFactory implements Factory<Lifecycle> {
  private final Provider<Application> appContextProvider;

  public AppModule_ProvideAppForegroundAndUserLoggedInLifecycleFactory(
      Provider<Application> appContextProvider) {
    this.appContextProvider = appContextProvider;
  }

  @Override
  public Lifecycle get() {
    return provideAppForegroundAndUserLoggedInLifecycle(appContextProvider.get());
  }

  public static AppModule_ProvideAppForegroundAndUserLoggedInLifecycleFactory create(
      Provider<Application> appContextProvider) {
    return new AppModule_ProvideAppForegroundAndUserLoggedInLifecycleFactory(appContextProvider);
  }

  public static Lifecycle provideAppForegroundAndUserLoggedInLifecycle(Application appContext) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideAppForegroundAndUserLoggedInLifecycle(appContext));
  }
}
